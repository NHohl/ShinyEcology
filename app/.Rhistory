geom_point()
ggplot(df, aes(x = N1, y = N2iso))+
geom_point()
ggplot(df, aes(x = N1, y = N2iso))
ggplot(df, aes(x = N1, y = N2iso))+
geom_point()
runApp()
runApp()
runApp()
runApp()
runApp()
#defines a matrix of alpha values
a <- matrix(c(0.01, 0.005, 0.005, 0.01), ncol = 2, byrow = TRUE)
a
#defines a matrix of alpha values
a <- matrix(c(0.01, 0.005, 0.005, 0.01), ncol = 2, byrow = F)
a
#defines a matrix of alpha values
a <- matrix(c(0.01, 0.005, 0.003, 0.01), ncol = 2, byrow = F)
a
#defines a matrix of alpha values
a <- matrix(c(0.01, 0.005, 0.003, 0.01), ncol = 2, byrow = T)
a
#defines a matrix of alpha values
a <- matrix(c(0.01, 0.005, 0.003, 0.01), ncol = 2)
a
#defines a matrix of alpha values
a <- matrix(c(0.01, 0.005, 0.005, 0.01), ncol = 2, byrow = T)
a
runApp()
runApp()
runApp()
runApp()
runApp()
#named vector of doubles
print(parms)
runApp()
#defines a matrix of alpha values
a <- matrix(c(0.01, 0.005, 0.005, 0.01), ncol = 2, byrow = T)
a
#defines a matrix of alpha values
a <- matrix(c(0.01, 0.003, 0.005, 0.01), ncol = 2, byrow = T)
a
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ggplot(df, aes(x = N1, y = N2iso))+
geom_linepoint()
ggplot(df, aes(x = N1, y = N2iso))+
geom_line()
shiny::runApp()
version
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
df <- data.frame(x = 1:2, y = 1:2)
df
p <- ggplot(df, aes(x = x, y = y, color = x)) +
geom_point(shape = 21, size = 4)
df <- data.frame(x = 1:2, y = 1:2)
df
p <- ggplot(df, aes(x = x, y = y, color = x)) +
geom_point(size = 4)
p
df <- data.frame(x = 1:2, y = 1:2, color = c("a", "b"))
p <- ggplot(df, aes(x = x, y = y, color = color)) +
geom_point(size = 4)
p
ggplot_build(p)$data
runApp()
rep("a", "b", each = 2, times = 50)
df4$colors <- rep("a", "b", times = 50)
rep("a", "b", times = 50)
?rep
rep(x("a", "b"), times = 50)
rep(c("a", "b"), times = 50)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ggplot_build(p)$data
encoding
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
df4
runApp()
runApp()
runApp()
require(gtable)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
#defines a matrix of alpha values
a <- matrix(c(0.01, 0.005, 0.005, 0.01), ncol = 2, byrow = T)
a
runApp()
#stores the non evaluated expression for the N2 isocline
N2iso <- expression(1/a[2, 2] - (a[2, 1]/a[2, 2]) * N1)
N2iso
eval(N2iso)
plot(N1, eval(N2iso), type = "l", ylim = c(0, 200), xlim = c(0,200),
ylab = expression("N"[2]), xlab = expression("N"[1]))
#defines a matrix of alpha values
a <- matrix(c(0.01, 0.005, 0.005, 0.01), ncol = 2, byrow = T)
a
N2 <- 0:200
N1iso <- expression(1/a[1, 1] - (a[1, 2]/a[1, 1]) * N2)
plot(N2, eval(N1iso), type = "l", ylim = c(0, 200), xlim = c(0,200),
ylab = expression("N"[2]), xlab = expression("N"[1]))
plot(eval(N1iso),N2, type = "l", ylim = c(0, 200), xlim = c(0,200),
ylab = expression("N"[2]), xlab = expression("N"[1]))
hline(x = N1iso, y = N2)
abline(x = N1iso, y = N2)
abline(h = N1iso, v = N2)
abline(h = eval(N1iso), v = N2)
plot(N1, eval(N2iso), type = "l", ylim = c(0, 200), xlim = c(0,200),
ylab = expression("N"[2]), xlab = expression("N"[1]),
main = "N2 Isocline")
plot(eval(N1iso),N2, type = "l", ylim = c(0, 200), xlim = c(0,200),
ylab = expression("N"[2]), xlab = expression("N"[1]),
main = "N1 Isocline")
runApp()
df <- data.frame(N1 = N1)
head(df)
df$N2iso <- N2iso
plot(df$N1, df$N2iso, type = "l")
ggplot(df, aes(x = N1, y = N2iso))+
geom_line()
df <- data.frame(N1 = N1)
head(df)
df$N2iso <- N2iso
head(df)
df$N2iso <- eval(N2iso)
head(df)
plot(df$N1, df$N2iso, type = "l")
ggplot(df, aes(x = N1, y = N2iso))+
geom_line()
# adds arrows to the plot
arrows(x0 = 90, y0 = 150, x1 = 90, y1 = 80, length = 0.1)
df$N1iso <- eval(N1iso)
N1iso <- expression(1/a[1, 1] - (a[1, 2]/a[1, 1]) * N2)
df$N1iso <- eval(N1iso)
ggplot(df, aes(x = N1, y = N2iso))+
geom_line() +
geom_line(aes(x = N1iso, y = N2))
runApp()
a
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
n4max <- 300
n4maxv <- 0:n4max
n4maxv
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
loadfonts()
runApp()
font_import()
runApp()
loadfonts()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
a <- 0:5
a
runApp()
a <- 1:5
b <- 6:10
data.frame(a,b)
c <- data.frame(a,b)
tail(c)
tail(c,1)
tail(c$b,1)
tail(a,1)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
a = 2
b = 3
1/a
1/0.5
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?ode
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
df <- data.frame(x = 1:2, y = 1:2, color = c("a", "b"))
df
p <- ggplot(df, aes(x = x, y = y, color = color)) +
geom_point(size = 4)
p
ggplot_build(p)$data
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
